/**
 * 
 */
package niagaCanvas;

import java.util.HashMap;

import jkanvas.Canvas;
import jkanvas.animation.AnimatedPosition;
import jkanvas.nodelink.layout.SimpleLayoutedView;

/**
 * @author sebastian
 * @param <T>
 *
 */
public class Operator extends NiagarinoOperators {

	/** The possible classes of the Operator of Niagarino */
	public static String[] OPERATORCLASS = { "BernoulliSampling", "BernoulliSamplingEfficient", "CrossProduct",
			"Derive", "FileIterator", "Frame", "KSorter", "Limit", "Multiplex", "NoOp", "OrderedAggregate", "Print",
			"Priority", "ProgressingMerge", "Punctuator", "ReservoirSampling", "SamplingOperator", "Scan",
			"SegmentedStorageRead", "SegemntedStorageWrite", "Selection", "SequentialFileIterator", "SourceOperator",
			"StratifiedSamplingOperator", "TopK", "TupleListIterator", "TupleWindow", "ValueWindow", "XMLParser" };
	private String opClass;

	public boolean modified;

	public HashMap<String, String> properties;

	/**
	 * Constructor sets up a Operator Node
	 * 
	 */
	public Operator(int x, int y) {
		this(x, y, (int) IDGenerator.createID());
	}

	public Operator(int x, int y, int createID) {
		super(x, y, createID);
		this.properties = new HashMap<String, String>();
		this.properties.put("ID", String.valueOf(this.getID()));
		this.modified = false;
	}

	@SuppressWarnings("unchecked")
	public static void addOperator(Canvas c, int x, int y) {
		SimpleLayoutedView<AnimatedPosition> lay = (SimpleLayoutedView<AnimatedPosition>) c.getLayout();

		lay.addNode(new Operator(x, y));
		c.refresh();

	}

	public String getOpClass() {
		return opClass;
	}

	public void setOpClass(String opClass) {
		this.opClass = opClass;
	}
}
