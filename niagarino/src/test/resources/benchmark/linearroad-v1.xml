<plan>
   <schema name="cardata">
      <int name="type" />
      <int name="time" progressing="true" />
      <int name="vid" />
      <double name="spd" />
      <int name="xway" />
      <int name="lane" />
      <int name="dir" />
      <int name="seg" />
      <int name="pos" />
      <int name="qid" />
      <int name="s_init" />
      <int name="s_end" />
      <int name="dow" />
      <int name="tod" />
      <int name="day" />
   </schema>

   <stream name="source">
      <operator name="source-cardata" class="niagarino.operator.SourceOperator">
         <schema name="cardata" />
         <object name="iterator" class="niagarino.benchmark.CardataFileIterator" />
      </operator>

      <operator name="derive-timestamp" class="niagarino.operator.Derive">
         <object name="functions" class="niagarino.benchmark.LinearRoad$TimestampDerivation" />
      </operator>

      <operator name="derive-time2" class="niagarino.operator.Derive">
         <object name="functions" class="niagarino.benchmark.LinearRoad$Time2Derivation" />
      </operator>

      <operator name="multiplex-source" class="niagarino.operator.Multiplex" />
   </stream>

<!-- ===================================================================================================== -->

   <stream name="type-0-first-part" previous="source">
      <operator name="select-type-0" class="niagarino.operator.Selection">
         <object name="predicate" class="niagarino.benchmark.LinearRoad$Type0Predicate" />
      </operator>

      <operator name="derive-segid" class="niagarino.operator.Derive">
         <object name="functions" class="niagarino.benchmark.LinearRoad$SegmentIdDerivationFunction" />
      </operator>

      <operator name="derive-minute" class="niagarino.operator.Derive">
         <object name="functions" class="niagarino.benchmark.LinearRoad$MinuteDerivation" />
      </operator>

      <operator name="multiplex-type-0" class="niagarino.operator.Multiplex" />
   </stream>

<!-- ===================================================================================================== -->

   <stream name="type-0-segment-change" previous="type-0-first-part">
      <operator name="derive-previous-segment" class="niagarino.operator.Derive">
         <object name="functions" class="niagarino.benchmark.SegmentChangeDerivation" />
      </operator>

      <operator name="select-segment-change" class="niagarino.operator.Selection">
         <object name="predicate" class="niagarino.benchmark.SegmentChangePredicate" />
      </operator>

      <operator name="multiplex-segment-change" class="niagarino.operator.Multiplex" />
   </stream>

<!-- ===================================================================================================== -->

   <stream name="type-0-accident-report" previous="type-0-segment-change">
      <operator name="storage-read-accident" class="niagarino.benchmark.AccidentReportStorageOperator" />

      <operator name="select-accident-reports" class="niagarino.operator.Selection">
         <object name="predicate" class="niagarino.benchmark.LinearRoad$AccidentReportSelectionPredicate" />
      </operator>

      <operator name="print-accident-reports" class="niagarino.benchmark.AccidentReportPrint" />

<!--       <operator name="print-accident-raw" class="niagarino.operator.Print"> -->
<!--          <type>print</type> -->
<!--       </operator> -->
   </stream>

<!-- ===================================================================================================== -->

   <stream name="type-0-toll-report" previous="type-0-segment-change">
      <operator name="storage-read-toll" class="niagarino.benchmark.TollReportStorageOperator" />

      <operator name="storage-read-lav" class="niagarino.benchmark.LAVReportStorageOperator" />

      <operator name="print-toll-reports" class="niagarino.benchmark.TollReportPrint" />

      <operator name="manager-accounts" class="niagarino.benchmark.AccountManagerOperator" />

<!--       <operator name="print-toll-reports-raw" class="niagarino.operator.Print"> -->
<!--          <type>print</type> -->
<!--       </operator> -->
   </stream>

<!-- ===================================================================================================== -->

   <stream name="type-0-lav" previous="type-0-first-part">
      <operator name="window-avgsv" class="niagarino.operator.ValueWindow">
         <size>60</size>
         <slide>60</slide>
         <start>0</start>
      </operator>

      <operator name="aggregate-avgsv" class="niagarino.operator.OrderedAggregate">
         <group>
            <attribute name="vid" />
            <attribute name="segid" />
         </group>
         <functions>
            <avg attribute="spd" />
         </functions>
      </operator>

      <operator name="aggregate-avgs" class="niagarino.operator.OrderedAggregate">
         <group>
            <attribute name="segid" />
         </group>
         <functions>
            <avg attribute="AVG(spd)" />
            <count attribute="vid" />
         </functions>
      </operator>

      <operator name="storage-cars" class="niagarino.benchmark.CarsStorageOperator" />

      <operator name="window-lav" class="niagarino.operator.ValueWindow">
         <size>300</size>
         <slide>60</slide>
         <start>0</start>
      </operator>

      <operator name="aggregate-lav" class="niagarino.operator.OrderedAggregate">
         <group>
            <attribute name="segid" />
         </group>
         <functions>
            <avg attribute="AVG(AVG(spd))" />
         </functions>
      </operator>

      <operator name="select-limit" class="niagarino.operator.Selection">
         <object name="predicate" class="niagarino.benchmark.LinearRoad$LengthLimit" />
      </operator>

      <operator name="derive-toll" class="niagarino.benchmark.TollCalculationStorageOperator" />

      <operator name="storage-toll-lav" class="niagarino.benchmark.TollStorageOperator" />

<!--       <operator name="print-lav" class="niagarino.operator.Print"> -->
<!--          <type>print</type> -->
<!--       </operator> -->
   </stream>

<!-- ===================================================================================================== -->

   <stream name="type-0-accidents" previous="type-0-first-part">
      <operator name="window-cars" class="niagarino.operator.ValueWindow">
         <size>120</size>
         <slide>30</slide>
         <start>0</start>
      </operator>

      <operator name="aggregate-cars" class="niagarino.operator.OrderedAggregate">
         <group>
            <attribute name="vid" />
            <attribute name="segid" />
            <attribute name="lane" />
         </group>
         <functions>
            <min attribute="pos" />
            <max attribute="pos" />
            <count attribute="pos" />
            <max attribute="time2" />
         </functions>
      </operator>

      <c>
         Select all cars that have stopped. This is done by checking for four position reports
         from the same location in
         the last two minutes.
      </c>
      <operator name="select-stopped-cars" class="niagarino.operator.Selection">
         <object name="predicate" class="niagarino.benchmark.LinearRoad$StoppedCarsPredicate" />
      </operator>

      <c>Window to look at the last 60 seconds of stopped cars.</c>
      <operator name="window-stopped-cars" class="niagarino.operator.ValueWindow">
         <size>60</size>
         <slide>30</slide>
         <start>0</start>
      </operator>

      <c>Aggregates the stopped cars so multiple stopped cars in the same location are grouped and counted.</c>
      <operator name="aggregate-stopped-cars" class="niagarino.operator.OrderedAggregate">
         <group>
            <attribute name="MIN(pos)" />
            <attribute name="segid" />
            <attribute name="lane" />
         </group>
         <functions>
            <min attribute="vid" />
            <max attribute="vid" />
            <count attribute="vid" />
            <min attribute="MAX(time2)" />
         </functions>
      </operator>

      <operator name="select-accidents" class="niagarino.operator.Selection">
         <object name="predicate" class="niagarino.benchmark.LinearRoad$AccidentPredicate" />
      </operator>

      <operator name="storage-accidents" class="niagarino.benchmark.AccidentsStorageOperator" />

<!--       <operator name="print-accidents" class="niagarino.operator.Print"> -->
<!--          <type>print</type> -->
<!--       </operator> -->
   </stream>

<!-- ===================================================================================================== -->

   <stream name="type-2-requests" previous="source">
      <operator name="select-type-2" class="niagarino.operator.Selection">
         <object name="predicate" class="niagarino.benchmark.LinearRoad$Type2Predicate" />
      </operator>

      <operator name="derive-account-balance" class="niagarino.operator.Derive">
         <object name="functions" class="niagarino.benchmark.AccountBalanceDerivation" />
      </operator>

      <operator name="print-type-2-report" class="niagarino.benchmark.BalanceReportPrint" />

<!--       <operator name="print-type-2-requests-raw" class="niagarino.operator.Print"> -->
<!--          <type>print</type> -->
<!--       </operator> -->
   </stream>

</plan>
