package niagaCanvas;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.Path2D;

import jkanvas.animation.AnimatedPosition;
import jkanvas.nodelink.EdgeRealizer;
import jkanvas.util.ArrowFactory;
import jkanvas.util.ArrowFactory.TipType;

public class EdgeArrowRealizer<T extends AnimatedPosition> implements EdgeRealizer<T> {

	@Override
	public Shape createLineShape(final T from, final T to) {
		Path2D path = (Path2D) PaintUtil.createLine(from.getX(), from.getY(), to.getX(), to.getY(), 1.0);
		TipType arrows = ArrowFactory.ARROW_FULL;
		ArrowFactory arrow = new ArrowFactory(arrows, arrows, 10.0);
		arrows.drawTip(path, to.getPos(), from.getPos());

		// return arrow.createArrow(from.getPos(), to.getPos());
		return PaintUtil.createLine(from.getX(), from.getY(), to.getX(), to.getY(), 1.0);
	}

	/**
	 * Getter.
	 * 
	 * @param from
	 *            The starting node.
	 * @param to
	 *            The ending node.
	 * @return The color of the edge. The default implementation returns
	 *         {@link Color#BLACK}.
	 */
	public Color getColor(final T from, final T to) {
		return Color.BLACK;
	}

	@Override
	public void drawLines(final Graphics2D g, final Shape edgeShape, final T from, final T to) {

		g.setColor(getColor(from, to));
		g.fill(edgeShape);

	}
}
